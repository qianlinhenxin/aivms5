<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qlhx.dao.UUserMapper">
	<resultMap id="BaseResultMap" type="com.qlhx.model.UUser">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="pswd" property="pswd" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="last_login_time" property="lastLoginTime"
			jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="BIGINT" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="type" property="type" />
	</resultMap>
	<sql id="Base_Column_List">
		id, nickname, email, pswd, create_time,
		last_login_time,status,phone,type,companyCode
	</sql>
	<sql id="limit_sql">
		<if test="page_sql != null and page_sql != ''">
			${page_sql}
		</if>
	</sql>

	<sql id="where_all">
		<where>
			<if test="name != null and name !='' ">
				and  nickname like CONCAT("%",#{name,jdbcType=VARCHAR},"%")
			</if>
			<if test="email != null and email !='' ">
				and  email like CONCAT("%",#{email,jdbcType=VARCHAR},"%")
			</if>
			<if test="companyCode != null and companyCode !='' ">
			    and companyCode = #{companyCode}
			</if>
		</where>
	</sql>
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from u_user
		<include refid="where_all" />
		<include refid="limit_sql" />
	</select>
	<select id="findCount" resultType="java.lang.Integer">
		select count(id) from u_user
		<include refid="where_all" />
	</select>

	<!-- 用户权限分配的分页查询 -->
	<select id="findUserAndRole" resultType="com.qlhx.model.UserRoleAllocationBo">
		select
		u.id,u.nickname,u.email,u.create_time as
		createTime,u.last_login_time as lastLoginTime,u.status
		,group_concat(distinct(ur.name)) roleNames,group_concat(distinct(ur.id)) roleIds,u.type,
		group_concat(a.areaName) areaNames,group_concat(ua.areaCode) areaCodes,
		u.companyCode,c.companyName
		 from
		u_user u
		left join u_user_role uur on uur.uid = u.id
		left join u_role ur on ur.id = uur.rid
		left join u_user_area ua on ua.uid = u.id
		left join u_area a on a.areaCode = ua.areaCode
		left join u_company c on c.companyCode = u.companyCode
		<where>
			<if test="name != null and name !='' ">
				and  u.nickname like CONCAT("%",#{name,jdbcType=VARCHAR},"%")
			</if>
			<if test="email != null and email !='' ">
				and u.email like CONCAT("%",#{email,jdbcType=VARCHAR},"%")
			</if>
			<if test="companyCode != null and companyCode !='' ">
			    and u.companyCode = #{companyCode}
			</if>
		</where>
		group by u.id
		order by u.create_time desc
		<include refid="limit_sql" />
	</select>
	<select id="selectRoleByUserId" resultType="com.qlhx.model.URoleBo">
		select ur.id,ur.name,ur.type,ifnull(uu.id,0)marker,uu.id userId from
		u_role ur
		left join u_user_role uur on uur.rid = ur.id and uur.uid =
		#{id,jdbcType=BIGINT}
		left join (select
		id from u_user where id
		=#{id,jdbcType=BIGINT}) uu on uu.id = uur.uid
		group by ur.id
		<!-- 勾选不上自己调整sql语句，由于mysql版本不同，所以不支持，可以看看Demo项目 http://shiro.itboy.net 
			select ur.id,ur.name,ur.type,ifnull(uur.uid,0) marker from u_role ur left 
			join(select * from u_user_role where uid=#{id,jdbcType=BIGINT}) uur on uur.rid 
			= ur.id -->
	</select>


	<resultMap id="LoginResultMap" type="com.qlhx.model.UUser"
		extends="BaseResultMap">
		<association property="nations" column="nation"
			javaType="com.qlhx.model.UUserNation" select="com.qlhx.dao.UUserNationMapper.selectByPrimaryKey">
			<id column="nationNum" property="nationNum" jdbcType="INTEGER" />
			<result column="value" property="value" jdbcType="VARCHAR" />
		</association>
		<association property="dep" column="depID"
			javaType="com.qlhx.model.UUserDep" select="com.qlhx.dao.UUserDepMapper.selectByPrimaryKey">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="value" property="value" jdbcType="VARCHAR" />
			<result column="parentId" property="parentid" jdbcType="INTEGER" />
		</association>
	</resultMap>

	<!-- 登录 -->
	<select id="login" resultType="com.qlhx.model.UUser">
		SELECT
		u.*,c.companyName
		FROM u_user u left join u_company c on u.companyCode = c.companyCode
		where u.email =
		#{email,jdbcType=VARCHAR} and u.pswd =
		#{pswd,jdbcType=VARCHAR}
	</select>
	<!-- 根据邮箱|帐号查询 -->
	<select id="findUserByEmail" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from u_user
		where email = #{email,jdbcType=VARCHAR}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from u_user
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectUserInfoByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		*
		from u_user
		where id = #{id,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from u_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.qlhx.model.UUser">
		insert into u_user (id, nickname, email,
		pswd,
		create_time, last_login_time,status,pinYin
		)
		values
		(#{id,jdbcType=BIGINT},
		#{nickname,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{pswd,jdbcType=VARCHAR},
		#{createTime,jdbcType=VARCHAR},
		#{lastLoginTime,jdbcType=VARCHAR},#{status,jdbcType=BIGINT},#{pinYin,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.qlhx.model.UUser">
		insert into u_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="pswd != null">
				pswd,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="companyCode != null">
				companyCode,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="pswd != null">
				#{pswd,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIGINT},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type},
			</if>
			<if test="companyCode != null">
				#{companyCode},
			</if>
		</trim>
	</insert>

	<insert id="insertMembers" parameterType="java.util.List">

        <![CDATA[
          insert into u_user(
               nickname, email,pswd,create_time,status,sex,nation,birthday,address,idNum,photo,issuing,validityDateStart,validityDateEnd,phone,depID,telephone,ecardNum,ecardEndTime,pinYin)
               values
      ]]>
		<foreach collection="list" item="item" close=";" separator=",">
            <![CDATA[
          (
              #{item.nickname,jdbcType=VARCHAR},
                    #{item.email,jdbcType=VARCHAR},
                    #{item.pswd,jdbcType=VARCHAR},
                    #{item.createTime,jdbcType=VARCHAR},
                    #{item.status,jdbcType=BIGINT},
                    #{item.sex,jdbcType=INTEGER},
                    #{item.nation,jdbcType=INTEGER},
                    #{item.birthday,jdbcType=VARCHAR},
                    #{item.address,jdbcType=VARCHAR},
                    #{item.idNum,jdbcType=VARCHAR},
                    #{item.photo,jdbcType=VARCHAR},
                    #{item.issuing,jdbcType=VARCHAR},
                    #{item.validityDateStart,jdbcType=VARCHAR},
                    #{item.validityDateEnd,jdbcType=VARCHAR},
                    #{item.phone,jdbcType=VARCHAR},
                    #{item.depID,jdbcType=INTEGER},
                    #{item.telephone,jdbcType=BIGINT},
                    #{item.ecardNum,jdbcType=VARCHAR},
                    #{item.ecardEndTime,jdbcType=VARCHAR},
                    #{item.pinYin,jdbcType=VARCHAR}
          )
      ]]>
		</foreach>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.qlhx.model.UUser">
		update u_user
		<set>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="pswd != null">
				pswd = #{pswd,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIGINT},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="companyCode != null">
				companyCode = #{companyCode,jdbcType=VARCHAR},
			</if>

		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.qlhx.model.UUser">
		update u_user
		set
		nickname = #{nickname,jdbcType=VARCHAR},
		email =
		#{email,jdbcType=VARCHAR},
		pswd = #{pswd,jdbcType=VARCHAR},
		create_time
		= #{createTime,jdbcType=VARCHAR},
		last_login_time =
		#{lastLoginTime,jdbcType=VARCHAR},
		status = #{status,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>


	<resultMap id="IntervieweeInfo" type="com.qlhx.model.UUser"
		extends="BaseResultMap">
		<association property="nations" column="nation"
			javaType="com.qlhx.model.UUserNation">
			<id column="nationNum" property="nationNum" jdbcType="INTEGER" />
			<result column="value" property="value" jdbcType="VARCHAR" />
		</association>
		<association property="dep" column="depID"
			javaType="com.qlhx.model.UUserDep">
			<id column="depID" property="id" jdbcType="INTEGER" />
			<result column="depvalue" property="value" jdbcType="VARCHAR" />
			<result column="parentId" property="parentId" jdbcType="INTEGER" />
		</association>
	</resultMap>

	<!-- 根据部门ID获取部门可访问人员列表 -->
	<select id="findEmployeesById" resultMap="IntervieweeInfo">
		SELECT
		u.id,u.nickname,u.sex,u.nation,u.photo,u.phone,u.telephone,u.depID,n.*,d.`value`
		depvalue,d.parentId,u.syncId  FROM u_user u LEFT JOIN u_natiom n ON
		u.nation=n.nationNum LEFT JOIN u_department d ON u.depID=d.id
		WHERE
		u.status=1 AND u.depID=#{depId}
		limit
		${(pageindex-1)*pagesize},${pagesize}
	</select>
	<select id="findEmployeesCountById" resultType="java.lang.Integer">
		SELECT
		COUNT(1)
		FROM u_user u LEFT JOIN u_natiom n ON
		u.nation=n.nationNum LEFT JOIN
		u_department d ON u.depID=d.id
		WHERE
		u.status=1 AND u.depID=#{depId}
	</select>

	<select id="findUserComboList" resultType="com.qlhx.model.ComboResult">
		SELECT id,nickname
		'text' FROM u_user
	</select>


	<!-- 根据员工卡号查询员工信息 -->
	<select id="findUserInfoByCardNum" resultMap="IntervieweeInfo">
		SELECT
		u.id,u.nickname,u.sex,u.nation,u.photo,u.phone,u.telephone,u.depID,u.ecardEndTime,u.idNum,n.*,d.`value`
		depvalue,d.parentId FROM u_user u LEFT JOIN u_natiom n ON
		u.nation=n.nationNum LEFT JOIN u_department d ON u.depID=d.id
		WHERE
		u.status=1 AND u.ecardNum=#{cardNum}
	</select>

	<!-- 根据手机号码后4位或姓名拼音首字母查询员工信息 -->
	<select id="findUserByPhoneOrName" resultMap="IntervieweeInfo">
		SELECT
		u.id,u.nickname,u.sex,u.nation,u.photo,u.phone,u.telephone,u.depID,u.ecardEndTime,u.idNum,u.pinYin,n.*,d.`value`
		depvalue,d.parentId FROM u_user u LEFT JOIN u_natiom n ON
		u.nation=n.nationNum LEFT JOIN u_department d ON u.depID=d.id
		WHERE
		RIGHT(u.phone,4)=#{param} OR u.pinYin=#{param}
		limit
		${(pageindex-1)*pagesize},${pagesize}
	</select>
	<select id="findUserCountByPhoneOrName" resultType="java.lang.Integer">
		SELECT
		COUNT(1)
		FROM u_user u LEFT JOIN u_natiom n ON
		u.nation=n.nationNum LEFT
		JOIN u_department d ON u.depID=d.id
		WHERE
		RIGHT(u.phone,4)=#{param} OR
		u.pinYin=#{param}
	</select>
	<select id="selectUserByDeptId" resultType="com.qlhx.model.UUser">
		SELECT * FROM u_user
		WHERE depID=${depId}
	</select>


	<select id="selectExportUserList" resultMap="IntervieweeInfo">
		SELECT
		u.id,
		u.nickname,
		u.sex,
		u.nation,
		u.photo,
		u.phone,
		u.telephone,
		u.depID,
		n.*,
		d.`value` AS depvalue,
		d.parentId,
		u.email,
		u.birthday,
		u.address,
		u.idNum,
		u.issuing,
		u.validityDateStart,
		u.validityDateEnd,
		u.ecardNum,
		u.ecardEndTime
		FROM
		u_user AS u
		LEFT JOIN u_natiom AS n
		ON
		u.nation = n.nationNum
		LEFT JOIN u_department AS d
		ON u.depID = d.id
		<include refid="where_all" />
	</select>

	<select id="findByIdNum" resultType="com.qlhx.model.UUser">
		SELECT * FROM u_user WHERE
		idNum='${idnum}'
	</select>
	<select id="findByPhoneOreMail" resultType="com.qlhx.model.UUser">
		SELECT * FROM u_user
		WHERE
		phone='${phone}' OR email = '${email}'
	</select>

	<select id="findByPhoneOrEmailCount" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM u_user WHERE
		phone='${phone}' OR email = '${email}' OR ecardNum =
		'${cardnum}' limit 1;
	</select>
	<select id="findUserByPhoneNum" resultType="com.qlhx.model.UUser">
		SELECT * FROM u_user
		WHERE phone like '%${phone}%'
	</select>
	<select id="findByPhone" resultType="com.qlhx.model.UUser">
		SELECT * FROM u_user
		WHERE
		phone ='${phone}'
	</select>

	<select id="findUserByCardNum" resultType="com.qlhx.model.UUser">
		SELECT * FROM u_user
		WHERE ecardNum = #{ecardNum} and status = 1 limit 1;
	</select>

	<select id="findUserCountByDeptId" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM u_user WHERE depID = #{id}
	</select>

	<!-- 根据同步用户id获取用户信息 -->
	<select id="selectUserBySyncId" resultType="com.qlhx.model.UUser">
		SELECT * FROM u_user
		WHERE syncId=#{syncId} AND companyNum=#{companyNum}
	</select>
	
	<select id="selectUserByPama" resultType="com.qlhx.model.UUser">
		SELECT * FROM u_user
		WHERE uid=#{uid} AND companyCode=#{companyCode}
	</select>

</mapper>
